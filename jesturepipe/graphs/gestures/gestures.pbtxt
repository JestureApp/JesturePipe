type: "Gestures"

################################################################################
# Side Packets
################################################################################

# Model paths
input_side_packet: "PALM_FULL_MODEL_PATH:palm_full_model_path"
input_side_packet: "PALM_LITE_MODEL_PATH:palm_lite_model_path"
input_side_packet: "HAND_LANDMARK_FULL_MODEL_PATH:hand_landmark_full_model_path"
input_side_packet: "HAND_LANDMARK_LITE_MODEL_PATH:hand_landmark_lite_model_path"

# Whether or not to use full or lite models
# (bool)
input_side_packet: "USE_FULL:use_full"

################################################################################
# Streams
################################################################################

# The frame to generate hand landmarks for
# (ImageFrame)
input_stream: "IMAGE:frame"

# Collection of normalized hand landmarks
# (std::vector<NormalizedLandmarkList>)
output_stream: "NORM_LANDMARKS:multi_hand_landmarks"

# (bool)
output_stream: "HAND_PRESENCE:hand_presence"

################################################################################
# Initialization Nodes
################################################################################

node {
    calculator: "ConstantSidePacketCalculator"
    output_side_packet: "PACKET:num_hands"
    options: {
        [mediapipe.ConstantSidePacketCalculatorOptions.ext]: {
        packet { int_value: 2 }
        }
    }
}

################################################################################
# Primary Nodes
################################################################################

node {
    calculator: "Hands"
    input_side_packet: "PALM_FULL_MODEL_PATH:palm_full_model_path"
    input_side_packet: "PALM_LITE_MODEL_PATH:palm_lite_model_path"
    input_side_packet: "HAND_LANDMARK_FULL_MODEL_PATH:hand_landmark_full_model_path"
    input_side_packet: "HAND_LANDMARK_LITE_MODEL_PATH:hand_landmark_lite_model_path"
    input_side_packet: "USE_FULL:use_full"
    input_side_packet: "NUM_HANDS:num_hands"
    input_stream: "IMAGE:frame"
    output_stream: "NORM_LANDMARKS:multi_hand_landmarks"
    output_stream: "HAND_PRESENCE:hand_presence"
}

node {
    calculator: "LandmarksToFrames"
    input_stream: "NORM_LANDMARKS:multi_hand_landmarks"
}