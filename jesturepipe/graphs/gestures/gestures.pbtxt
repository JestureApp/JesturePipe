type: "Gestures"

################################################################################
# Inputs
################################################################################

input_side_packet: "NUM_HANDS:num_hands"

input_stream: "TICK:tick"

input_stream: "LANDMARKS:multi_hand_landmarks"

input_stream: "WORLD_LANDMARKS:multi_hand_world_landmarks"

input_stream: "HANDEDNESS:multi_handedness"

input_stream: "ADD_GESTURE:add_gesture"

input_stream: "IS_RECORDING:is_recording"

################################################################################
# Outputs
################################################################################

output_stream: "GESTURE:recognized_gestures"
output_stream: "ACT_GESTURE:actionable_gesture"
output_stream: "REC_GESTURE:recorded_gestures"

################################################################################
# Graph
################################################################################

node {
    calculator: "FixedLengthNormalizedLandmarkListVectorCalculator"
    input_side_packet: "LENGTH:num_hands"
    input_stream: "TICK:tick"
    input_stream: "VECTOR:multi_hand_landmarks"
    output_stream: "fixed_multi_hand_landmarks"
}

node {
    calculator: "GetOptionalNormalizedLandmarkListVectorItemCalculator"
    input_stream: "VECTOR:fixed_multi_hand_landmarks"
    output_stream: "ITEM:landmarks1"
    options {
        [mediapipe.GetVectorItemCalculatorOptions.ext] {
            item_index: 0
        }
    }
}

node {
    calculator: "GestureRecognizer2"
    input_stream: "LANDMARKS:landmarks1"
    input_stream: "ADD_GESTURE:add_gesture"
    input_stream: "IS_RECORDING:is_recording"
    output_stream: "GESTURE:recognized_gestures"
    output_stream: "ACT_GESTURE:actionable_gestures"
    output_stream: "REC_GESTURE:recorded_gestures"
}

